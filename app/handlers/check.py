from telegram import Update
from telegram.ext import ContextTypes, CommandHandler
from app.services import reputation
from app.utils import risk_label

async def rep_cmd(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # –í –≥—Ä—É–ø–ø–∞—Ö: –∏—Å–ø–æ–ª—å–∑—É–π –∫–∞–∫ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if update.message.reply_to_message and update.message.reply_to_message.from_user:
        target = update.message.reply_to_message.from_user
        await reputation.ensure_user(target)
        rep = await reputation.get_rep(target.id)
        label = risk_label(rep['score'])
        return await update.effective_message.reply_text(
            f"–†–µ–ø—É—Ç–∞—Ü–∏—è @{target.username or target.id}: {rep['score']} ({label}) | üëç{rep['praises']} | ‚ö†Ô∏è{rep['reports']}"
        )
    # –í –ª–∏—á–∫–µ: –ø–æ forward
    if update.message.forward_from:
        target = update.message.forward_from
        await reputation.ensure_user(target)
        rep = await reputation.get_rep(target.id)
        label = risk_label(rep['score'])
        return await update.effective_message.reply_text(
            f"–†–µ–ø—É—Ç–∞—Ü–∏—è @{target.username or target.id}: {rep['score']} ({label}) | üëç{rep['praises']} | ‚ö†Ô∏è{rep['reports']}"
        )
    return await update.effective_message.reply_text("–û—Ç–≤–µ—Ç—å—Ç–µ –∫–æ–º–∞–Ω–¥–æ–π –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —á–∞—Ç–µ –∏–ª–∏ –ø–µ—Ä–µ—à–ª–∏—Ç–µ –µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –ª–∏—á–∫—É –±–æ—Ç—É.")

def setup(application):
    application.add_handler(CommandHandler("rep", rep_cmd))
